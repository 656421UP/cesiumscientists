var viewer = new Cesium.Viewer('cesiumContainer');
var theta = 90; //Angle of the focal point of the triangle
var r = 10; //Radius

//Calculates the arc from the radius and degrees
function calculateArc(){
    var pi = Math.PI;
    var arc = (theta/180) * pi * r;
    var c = r * Math.sqrt(2-(2*Math.cos(theta)));
    console.log("arc length: " + arc);
    console.log("opposite of angle: " + c);
    return arc;
}

//Calculates the maximum height of the arc from the hypotenuse
function arcMaxHeight(){
    var h = r * (1-Math.cos(theta/2));
    console.log("max height of arc: " + h);
    return h;
}



function drawTriangle(){
    var triangleArray = [0,0,r,0];
    var arc = calculateArc();
    var arcDivisions = arc/10;
    var theta2 = 9;
    
    console.log("Arc section lengths: " + arcDivisions);
    
    for(var i=0;i<10;i++){
        var theta3 = theta2 * i;
        
        var longitude = r * Math.cos(theta3);
        console.log("loop: " + i + " Long: " + longitude);
        var latitude = r * Math.sin(theta3);
        console.log("loop: " + i + " Lat: " + latitude);
        
        
        
        triangleArray.push(longitude);
        triangleArray.push(latitude);
    }
    console.log(triangleArray);
    
    triangleArray.push(0);
    triangleArray.push(10);
    
    //Draws the triangle
    var triangle = viewer.entities.add({
        name: 'Triangle',
        polygon: {
            hierarchy: Cesium.Cartesian3.fromDegreesArray(triangleArray),
            material: Cesium.Color.RED.withAlpha(0.5),
            outline: true,
            outlineColor: Cesium.Color.BLACK
    }
});
}



//viewer.zoomTo(triangle);

calculateArc();
arcMaxHeight();
drawTriangle();